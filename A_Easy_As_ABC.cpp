#include <bits/stdc++.h>
#include <iostream>
#include <set>
#include <cmath>
#include <map>
#include <sstream>
#include <deque>
#include <queue>
#include <stack>
#include <algorithm>
#include <limits>
#include <iomanip>
using namespace std;
#define ll long long
ll mod = 1e9 + 7;
// #define TxtIO   freopen("input.txt","r",stdin); freopen("output.txt","w",stdout); freopen("error.txt", "w", stderr);

void solve(){
    string r1, r2, r3;
    cin>>r1>>r2>>r3;
    set <string> s;
    s.insert(r1);
    s.insert(r2);
    s.insert(r3);
    string temp; temp+=r1[0]; temp+=r1[1];
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[0];
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[1];
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp.pop_back();
    // for (auto d:s) cout<<d<<" ";
    temp+=r1[1];
    temp+=r1[0];
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[0];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[2];
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r1[2];
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp.pop_back();
    temp+=r1[2];
    temp+=r1[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[2];
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp.pop_back();
    temp+=r2[0];
    temp+=r1[0];
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r1[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r3[1];
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r3[0];
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp.pop_back();
    temp+=r2[1];
    temp+=r1[0];
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r1[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r1[2];
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[2];
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r3[2];
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r3[1];
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r3[0];
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[0];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp.pop_back();
    temp+=r2[2];
    temp+=r1[2];
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r1[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r3[1];
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r3[2];
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp.pop_back();
    temp+=r3[0];
    temp+=r2[0];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r3[1];
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp.pop_back();
    temp+=r3[1];
    temp+=r3[0];
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[0];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[2];
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r3[2];
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp.pop_back();
    temp+=r3[2];
    temp+=r3[1];
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[1];
    temp+=r1[0]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r2[0]; s.insert(temp); temp.pop_back();
    temp+=r2[2]; s.insert(temp); temp.pop_back();
    temp+=r3[0]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    temp.pop_back();
    temp+=r2[2];
    temp+=r1[2]; s.insert(temp); temp.pop_back();
    temp+=r1[1]; s.insert(temp); temp.pop_back();
    temp+=r2[1]; s.insert(temp); temp.pop_back();
    temp+=r3[1]; s.insert(temp); temp.pop_back();
    cout<<*s.begin()<<"\n";
}

int main() 
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // TxtIO;
    // ll t; cin>>t; while(t--)
        solve();
    return 0;
}